{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ref, onValue, push, remove, update } from 'firebase/database';\nimport { db } from '../firebase';\nconst taskDbref = ref(db, 'tasks');\nexport const useTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState({});\n  const [newTask, setNewTask] = useState('');\n  const [editingTask, setEditingTask] = useState({\n    id: null,\n    title: ''\n  });\n  useEffect(() => {\n    return onValue(taskDbref, snapshot => {\n      const loadedTasks = snapshot.val() || {};\n      setTasks(loadedTasks);\n    });\n  }, []);\n  const handleAddTask = () => {\n    push(taskDbref, {\n      title: newTask\n    }).then(addedTask => {\n      setNewTask(''); // Сбросить поле ввода после добавления задачи\n    }).catch(error => {\n      console.error('Ошибка при добавлении задачи:', error);\n    });\n  };\n  const handleEditClick = (taskId, taskTitle) => {\n    setEditingTask({\n      id: taskId,\n      title: taskTitle\n    });\n  }; // исправить формат\n\n  const handleEditTask = (taskId, newTitle) => {\n    const taskRef = ref(db, `tasks/${taskId}`);\n    update(taskRef, {\n      title: newTitle\n    }).then(() => {\n      setEditingTask({\n        id: null,\n        title: ''\n      }); // Сбрасываем editingTask после обновления\n    }).catch(error => {\n      console.error('Ошибка при изменении задачи:', error);\n    });\n  };\n  const handleDeleteTask = taskId => {\n    console.log(taskId); // Выводим текущее значение taskId в консоль\n    const taskRef = ref(db, `tasks/${taskId}`);\n    remove(taskRef).then(() => {\n      console.log('Задача успешно удалена');\n    }).catch(error => {\n      console.error('Ошибка при удалении задачи:', error);\n    });\n  };\n  const handleSortTask = () => {\n    const taskIds = Object.keys(tasks);\n    taskIds.sort((a, b) => {\n      const taskA = tasks[a].title.toLowerCase();\n      const taskB = tasks[b].title.toLowerCase();\n      if (taskA < taskB) return -1;\n      if (taskA > taskB) return 1;\n      return 0;\n    });\n    const sortedTasks = {};\n    taskIds.forEach(taskId => {\n      sortedTasks[taskId] = tasks[taskId];\n    });\n    setTasks(sortedTasks);\n  };\n  return {\n    tasks,\n    newTask,\n    setNewTask,\n    editingTask,\n    setEditingTask,\n    handleAddTask,\n    handleEditClick,\n    handleEditTask,\n    handleDeleteTask,\n    handleSortTask\n  };\n};\n_s(useTasks, \"9+0ZLiI7XkwXzokrlfE2i7xL8bU=\");","map":{"version":3,"names":["useState","useEffect","ref","onValue","push","remove","update","db","taskDbref","useTasks","_s","tasks","setTasks","newTask","setNewTask","editingTask","setEditingTask","id","title","snapshot","loadedTasks","val","handleAddTask","then","addedTask","catch","error","console","handleEditClick","taskId","taskTitle","handleEditTask","newTitle","taskRef","handleDeleteTask","log","handleSortTask","taskIds","Object","keys","sort","a","b","taskA","toLowerCase","taskB","sortedTasks","forEach"],"sources":["/Users/BopoHa/Desktop/PROJECTS/To_Do_List_Creator/my-app/src/hooks/useTasks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ref, onValue, push, remove, update } from 'firebase/database';\nimport { db } from '../firebase';\n\nconst taskDbref = ref(db, 'tasks');\n\nexport const useTasks = () => {\n\tconst [tasks, setTasks] = useState({});\n\tconst [newTask, setNewTask] = useState('');\n\tconst [editingTask, setEditingTask] = useState({ id: null, title: '' });\n\n\tuseEffect(() => {\n\t\treturn onValue(taskDbref, (snapshot) => {\n\t\t\tconst loadedTasks = snapshot.val() || {};\n\t\t\tsetTasks(loadedTasks);\n\t\t});\n\t}, []);\n\n\tconst handleAddTask = () => {\n\t\tpush(taskDbref, { title: newTask })\n\t\t\t.then((addedTask) => {\n\t\t\t\tsetNewTask(''); // Сбросить поле ввода после добавления задачи\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Ошибка при добавлении задачи:', error);\n\t\t\t});\n\t};\n\n\tconst handleEditClick = (taskId, taskTitle) => {\n\t\tsetEditingTask({ id: taskId, title: taskTitle });\n\t}; // исправить формат\n\n\tconst handleEditTask = (taskId, newTitle) => {\n\t\tconst taskRef = ref(db, `tasks/${taskId}`);\n\t\tupdate(taskRef, { title: newTitle })\n\t\t\t.then(() => {\n\t\t\t\tsetEditingTask({ id: null, title: '' }); // Сбрасываем editingTask после обновления\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Ошибка при изменении задачи:', error);\n\t\t\t});\n\t};\n\n\tconst handleDeleteTask = (taskId) => {\n\t\tconsole.log(taskId); // Выводим текущее значение taskId в консоль\n\t\tconst taskRef = ref(db, `tasks/${taskId}`);\n\t\tremove(taskRef)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('Задача успешно удалена');\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Ошибка при удалении задачи:', error);\n\t\t\t});\n\t};\n\tconst handleSortTask = () => {\n\t\tconst taskIds = Object.keys(tasks);\n\n\t\ttaskIds.sort((a, b) => {\n\t\t\tconst taskA = tasks[a].title.toLowerCase();\n\t\t\tconst taskB = tasks[b].title.toLowerCase();\n\t\t\tif (taskA < taskB) return -1;\n\t\t\tif (taskA > taskB) return 1;\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst sortedTasks = {};\n\t\ttaskIds.forEach((taskId) => {\n\t\t\tsortedTasks[taskId] = tasks[taskId];\n\t\t});\n\n\t\tsetTasks(sortedTasks);\n\t};\n\treturn {\n\t\ttasks,\n\t\tnewTask,\n\t\tsetNewTask,\n\t\teditingTask,\n\t\tsetEditingTask,\n\t\thandleAddTask,\n\t\thandleEditClick,\n\t\thandleEditTask,\n\t\thandleDeleteTask,\n\t\thandleSortTask,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}